{
  "refactorings": {
    "src/main/java/spoon/reflect/visitor/ElementPrinterHelper.java": [
      {
        "fromLine": 504,
        "toLine": 533,
        "oldContent": "\tprivate ListPrinter createListPrinter(boolean startPrefixSpace, String start, boolean startSufficSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\treturn new ListPrinter(printer, startPrefixSpace, start, startSufficSpace, nextPrefixSpace, next, nextSuffixSpace, endPrefixSpace, end);\n\t}",
        "newContent": "\tprivate ListPrinter createListPrinter(ListPrinterConfiguration config) {\n\t\treturn new ListPrinter(printer, config);\n\t}"
      },
      {
        "fromLine": 550,
        "toLine": 580,
        "oldContent": "\tpublic <T> void printList(Iterable<T> iterable,\n\t\t\tString startKeyword,\n\t\t\tboolean startPrefixSpace, String start, boolean startSuffixSpace,\n\t\t\tboolean nextPrefixSpace, String next, boolean nextSuffixSpace,\n\t\t\tboolean endPrefixSpace, String end,\n\t\t\tConsumer<T> elementPrinter) {",
        "newContent": "\tpublic <T> void printList(Iterable<T> iterable,\n\t\t\tString startKeyword,\n\t\t\tListPrinterConfiguration config,\n\t\t\tConsumer<T> elementPrinter) {"
      }
    ],
    "src/main/java/spoon/reflect/visitor/ListPrinter.java": [
      {
        "fromLine": 8,
        "toLine": 39,
        "oldContent": "\tpublic ListPrinter(TokenWriter printerHelper, boolean startPrefixSpace, String start, boolean startSuffixSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {",
        "newContent": "\tpublic ListPrinter(TokenWriter printerHelper, ListPrinterConfiguration config) {"
      }
    ],
    "src/test/java/spoon/test/template/testclasses/replace/ElementPrinterHelper.java": [
      {
        "fromLine": 0,
        "toLine": 9,
        "oldContent": "\tpublic ListPrinter createListPrinter(boolean startPrefixSpace, String start, boolean startSufficSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {",
        "newContent": "\tpublic ListPrinter createListPrinter(ListPrinterConfiguration config) {"
      }
    ],
    "src/test/java/spoon/test/template/testclasses/replace/NewPattern.java": [
      {
        "fromLine": 16,
        "toLine": 30,
        "oldContent": "\tprivate void patternModel(OldPattern.Parameters params) throws Exception {\r\n\t\telementPrinterHelper.printList(params.getIterable.S(), \r\n\t\t\t\tparams.startPrefixSpace, \r\n\t\t\t\tparams.start, \r\n\t\t\t\tparams.startSuffixSpace, \r\n\t\t\t\tparams.nextPrefixSpace, \r\n\t\t\t\tparams.next, \r\n\t\t\t\tparams.nextSuffixSpace, \r\n\t\t\t\tparams.endPrefixSpace, \r\n\t\t\t\tparams.end,\r\n\t\t\t\tv -> {\r\n\t\t\t\t\tparams.statements.S();\r\n\t\t\t\t});\r\n\t}",
        "newContent": "\tprivate void patternModel(OldPattern.Parameters params) throws Exception {\r\n\t\telementPrinterHelper.printList(params.getIterable.S(), \r\n\t\t\t\tparams.startKeyword, \r\n\t\t\t\tnew ListPrinterConfiguration(\r\n\t\t\t\t\tparams.startPrefixSpace, \r\n\t\t\t\t\tparams.start, \r\n\t\t\t\t\tparams.startSuffixSpace, \r\n\t\t\t\t\tparams.nextPrefixSpace, \r\n\t\t\t\t\tparams.next, \r\n\t\t\t\t\tparams.nextSuffixSpace, \r\n\t\t\t\t\tparams.endPrefixSpace, \r\n\t\t\t\t\tparams.end),\r\n\t\t\t\tv -> {\r\n\t\t\t\t\tparams.statements.S();\r\n\t\t\t\t});\r\n\t}"
      }
    ],
    "src/test/java/spoon/test/template/testclasses/replace/OldPattern.java": [
      {
        "fromLine": 41,
        "toLine": 55,
        "oldContent": "\t\ttry (spoon.reflect.visitor.ListPrinter lp = elementPrinterHelper.createListPrinter(\r\n\t\t\t\tparams.startPrefixSpace, \r\n\t\t\t\tparams.start, \r\n\t\t\t\tparams.startSuffixSpace, \r\n\t\t\t\tparams.nextPrefixSpace, \r\n\t\t\t\tparams.next, \r\n\t\t\t\tparams.nextSuffixSpace, \r\n\t\t\t\tparams.endPrefixSpace, \r\n\t\t\t\tparams.end\r\n\t\t\t)) {",
        "newContent": "\t\ttry (spoon.reflect.visitor.ListPrinter lp = elementPrinterHelper.createListPrinter(new ListPrinterConfiguration(\r\n\t\t\t\tparams.startPrefixSpace, \r\n\t\t\t\tparams.start, \r\n\t\t\t\tparams.startSuffixSpace, \r\n\t\t\t\tparams.nextPrefixSpace, \r\n\t\t\t\tparams.next, \r\n\t\t\t\tparams.nextSuffixSpace, \r\n\t\t\t\tparams.endPrefixSpace, \r\n\t\t\t\tparams.end))) {"
      }
    ]
  },
  "extractedClasses": {
    "src/main/java/spoon/reflect/visitor/ListPrinterConfiguration.java": "package spoon.reflect.visitor;\n\npublic class ListPrinterConfiguration {\n\n\tprivate boolean startPrefixSpace;\n\tprivate String start;\n\tprivate boolean startSuffixSpace;\n\tprivate boolean nextPrefixSpace;\n\tprivate String next;\n\tprivate boolean nextSuffixSpace;\n\tprivate boolean endPrefixSpace;\n\tprivate String end;\n\n\tpublic ListPrinterConfiguration(boolean startPrefixSpace, String start, boolean startSuffixSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\tthis.startPrefixSpace = startPrefixSpace;\n\t\tthis.start = start;\n\t\tthis.startSuffixSpace = startSuffixSpace;\n\t\tthis.nextPrefixSpace = nextPrefixSpace;\n\t\tthis.next = next;\n\t\tthis.nextSuffixSpace = nextSuffixSpace;\n\t\tthis.endPrefixSpace = endPrefixSpace;\n\t\tthis.end = end;\n\t}\n\n\tpublic boolean isStartPrefixSpace() {\n\t\treturn startPrefixSpace;\n\t}\n\n\tpublic String getStart() {\n\t\treturn start;\n\t}\n\n\tpublic boolean isStartSuffixSpace() {\n\t\treturn startSuffixSpace;\n\t}\n\n\tpublic boolean isNextPrefixSpace() {\n\t\treturn nextPrefixSpace;\n\t}\n\n\tpublic String getNext() {\n\t\treturn next;\n\t}\n\n\tpublic boolean isNextSuffixSpace() {\n\t\treturn nextSuffixSpace;\n\t}\n\n\tpublic boolean isEndPrefixSpace() {\n\t\treturn endPrefixSpace;\n\t}\n\n\tpublic String getEnd() {\n\t\treturn end;\n\t}\n}\n"
  },
  "tenperature": 0.9,
  "date": "2024-07-16T20:20:05.142Z"
}