{
  "refactorings": {
    "src/main/java/spoon/reflect/visitor/ElementPrinterHelper.java": [
      {
        "fromLine": 504,
        "toLine": 533,
        "oldContent": "\tprivate ListPrinter createListPrinter(boolean startPrefixSpace, String start, boolean startSufficSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\treturn new ListPrinter(printer, startPrefixSpace, start, startSufficSpace, nextPrefixSpace, next, nextSuffixSpace, endPrefixSpace, end);\n\t}\n",
        "newContent": "\tprivate ListPrinter createListPrinter(ListPrinterConfiguration config) {\n\t\treturn new ListPrinter(printer, config);\n\t}\n"
      },
      {
        "fromLine": 550,
        "toLine": 580,
        "oldContent": "\tpublic <T> void printList(Iterable<T> iterable,\n\t\t\tString startKeyword,\n\t\t\tboolean startPrefixSpace, String start, boolean startSuffixSpace,\n\t\t\tboolean nextPrefixSpace, String next, boolean nextSuffixSpace,\n\t\t\tboolean endPrefixSpace, String end,\n\t\t\tConsumer<T> elementPrinter) {\n",
        "newContent": "\tpublic <T> void printList(Iterable<T> iterable,\n\t\t\tString startKeyword,\n\t\t\tListPrinterConfiguration config,\n\t\t\tConsumer<T> elementPrinter) {\n"
      }
    ],
    "src/main/java/spoon/reflect/visitor/ListPrinter.java": [
      {
        "fromLine": 8,
        "toLine": 39,
        "oldContent": "\tpublic ListPrinter(TokenWriter printerHelper, boolean startPrefixSpace, String start, boolean startSuffixSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\tthis.printerTokenWriter = printerHelper;\n\t\tthis.nextPrefixSpace = nextPrefixSpace;\n\t\tthis.separator = next;\n\t\tthis.nextSuffixSpace = nextSuffixSpace;\n\t\tthis.endPrefixSpace = endPrefixSpace;\n\t\tthis.end = end;\n",
        "newContent": "\tpublic ListPrinter(TokenWriter printerHelper, ListPrinterConfiguration config) {\n\t\tthis.printerTokenWriter = printerHelper;\n\t\tthis.nextPrefixSpace = config.isNextPrefixSpace();\n\t\tthis.separator = config.getNext();\n\t\tthis.nextSuffixSpace = config.isNextSuffixSpace();\n\t\tthis.endPrefixSpace = config.isEndPrefixSpace();\n\t\tthis.end = config.getEnd();\n"
      }
    ],
    "src/test/java/spoon/test/template/testclasses/replace/ElementPrinterHelper.java": [
      {
        "fromLine": 0,
        "toLine": 9,
        "oldContent": "public class ElementPrinterHelper {\r\n\tpublic ListPrinter createListPrinter(boolean startPrefixSpace, String start, boolean startSufficSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\r\n\t\treturn null;\r\n\t}\r\n}\r\n",
        "newContent": "public class ElementPrinterHelper {\r\n\tpublic ListPrinter createListPrinter(ListPrinterConfiguration config) {\r\n\t\treturn null;\r\n\t}\r\n}\r\n"
      }
    ]
  },
  "extractedClasses": {
    "src/main/java/spoon/reflect/visitor/ListPrinterConfiguration.java": "package spoon.reflect.visitor;\n\npublic class ListPrinterConfiguration {\n\n\tprivate boolean startPrefixSpace;\n\tprivate String start;\n\tprivate boolean startSuffixSpace;\n\tprivate boolean nextPrefixSpace;\n\tprivate String next;\n\tprivate boolean nextSuffixSpace;\n\tprivate boolean endPrefixSpace;\n\tprivate String end;\n\n\tpublic ListPrinterConfiguration(boolean startPrefixSpace, String start, boolean startSuffixSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\tthis.startPrefixSpace = startPrefixSpace;\n\t\tthis.start = start;\n\t\tthis.startSuffixSpace = startSuffixSpace;\n\t\tthis.nextPrefixSpace = nextPrefixSpace;\n\t\tthis.next = next;\n\t\tthis.nextSuffixSpace = nextSuffixSpace;\n\t\tthis.endPrefixSpace = endPrefixSpace;\n\t\tthis.end = end;\n\t}\n\n\tpublic boolean isStartPrefixSpace() {\n\t\treturn startPrefixSpace;\n\t}\n\n\tpublic String getStart() {\n\t\treturn start;\n\t}\n\n\tpublic boolean isStartSuffixSpace() {\n\t\treturn startSuffixSpace;\n\t}\n\n\tpublic boolean isNextPrefixSpace() {\n\t\treturn nextPrefixSpace;\n\t}\n\n\tpublic String getNext() {\n\t\treturn next;\n\t}\n\n\tpublic boolean isNextSuffixSpace() {\n\t\treturn nextSuffixSpace;\n\t}\n\n\tpublic boolean isEndPrefixSpace() {\n\t\treturn endPrefixSpace;\n\t}\n\n\tpublic String getEnd() {\n\t\treturn end;\n\t}\n\n}\n"
  },
  "tenperature": 0.9,
  "date": "2024-07-16T20:30:11.963Z"
}