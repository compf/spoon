{
  "refactorings": {
    "src/main/java/spoon/reflect/visitor/ElementPrinterHelper.java": [
      {
        "fromLine": 504,
        "toLine": 533,
        "oldContent": "\tprivate ListPrinter createListPrinter(boolean startPrefixSpace, String start, boolean startSufficSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\treturn new ListPrinter(printer, startPrefixSpace, start, startSufficSpace, nextPrefixSpace, next, nextSuffixSpace, endPrefixSpace, end);\n\t}\n",
        "newContent": "\tprivate ListPrinter createListPrinter(ListPrinterConfiguration configuration) {\n\t\treturn new ListPrinter(printer, configuration);\n\t}\n"
      },
      {
        "fromLine": 550,
        "toLine": 580,
        "oldContent": "\tpublic <T> void printList(Iterable<T> iterable,\n\t\t\tString startKeyword,\n\t\t\tboolean startPrefixSpace, String start, boolean startSuffixSpace,\n\t\t\tboolean nextPrefixSpace, String next, boolean nextSuffixSpace,\n\t\t\tboolean endPrefixSpace, String end,\n\t\t\tConsumer<T> elementPrinter) {",
        "newContent": "\tpublic <T> void printList(Iterable<T> iterable,\n\t\t\tString startKeyword,\n\t\t\tListPrinterConfiguration configuration,\n\t\t\tConsumer<T> elementPrinter) {"
      }
    ],
    "src/test/java/spoon/test/template/testclasses/replace/ElementPrinterHelper.java": [
      {
        "fromLine": 0,
        "toLine": 9,
        "oldContent": "\tpublic ListPrinter createListPrinter(boolean startPrefixSpace, String start, boolean startSufficSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\treturn null;\n\t}\n",
        "newContent": "\tpublic ListPrinter createListPrinter(ListPrinterConfiguration configuration) {\n\t\treturn null;\n\t}\n"
      }
    ],
    "src/main/java/spoon/reflect/visitor/ListPrinter.java": [
      {
        "fromLine": 8,
        "toLine": 39,
        "oldContent": "\tpublic ListPrinter(TokenWriter printerHelper, boolean startPrefixSpace, String start, boolean startSuffixSpace, boolean nextPrefixSpace, String next, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {",
        "newContent": "\tpublic ListPrinter(TokenWriter printerHelper, ListPrinterConfiguration configuration) {"
      },
      {
        "fromLine": 55,
        "toLine": 82,
        "oldContent": "\t\t\tisFirst = false;\n\t\t} else {\n\t\t\t/*\n\t\t\t * we are starting separator item. Print `separator` separator now\n\t\t\t */\n\t\t\tif (nextPrefixSpace) {\n\t\t\t\tprinterTokenWriter.writeSpace();\n\t\t\t}\n\t\t\tif (separator != null && !separator.isEmpty()) {\n\t\t\t\tprinterTokenWriter.writeSeparator(separator);\n\t\t\t}\n\t\t\tif (nextSuffixSpace) {\n\t\t\t\tprinterTokenWriter.writeSpace();\n\t\t\t}\n\t\t}\n\t}\n\n\t@Override\n\tpublic void close() {\n\t\tif (endPrefixSpace) {\n\t\t\tprinterTokenWriter.writeSpace();\n\t\t}\n\t\tif (end != null && !end.isEmpty()) {\n\t\t\tprinterTokenWriter.writeSeparator(end);\n\t\t}\n\t}\n",
        "newContent": "\t\t\tisFirst = false;\n\t\t} else {\n\t\t\t/*\n\t\t\t * we are starting separator item. Print `separator` separator now\n\t\t\t */\n\t\t\tif (configuration.isNextPrefixSpace()) {\n\t\t\t\tprinterTokenWriter.writeSpace();\n\t\t\t}\n\t\t\tif (!configuration.getSeparator().isEmpty()) {\n\t\t\t\tprinterTokenWriter.writeSeparator(configuration.getSeparator());\n\t\t\t}\n\t\t\tif (configuration.isNextSuffixSpace()) {\n\t\t\t\tprinterTokenWriter.writeSpace();\n\t\t\t}\n\t\t}\n\t}\n\n\t@Override\n\tpublic void close() {\n\t\tif (configuration.isEndPrefixSpace()) {\n\t\t\tprinterTokenWriter.writeSpace();\n\t\t}\n\t\tif (!configuration.getEnd().isEmpty()) {\n\t\t\tprinterTokenWriter.writeSeparator(configuration.getEnd());\n\t\t}\n\t}\n"
      }
    ]
  },
  "extractedClasses": {
    "src/main/java/spoon/reflect/visitor/ListPrinterConfiguration.java": "public class ListPrinterConfiguration {\n\n\tprivate final boolean startPrefixSpace;\n\tprivate final String start;\n\tprivate final boolean startSuffixSpace;\n\tprivate final boolean nextPrefixSpace;\n\tprivate final String separator;\n\tprivate final boolean nextSuffixSpace;\n\tprivate final boolean endPrefixSpace;\n\tprivate final String end;\n\n\tpublic ListPrinterConfiguration(boolean startPrefixSpace, String start, boolean startSuffixSpace, boolean nextPrefixSpace, String separator, boolean nextSuffixSpace, boolean endPrefixSpace, String end) {\n\t\tthis.startPrefixSpace = startPrefixSpace;\n\t\tthis.start = start;\n\t\tthis.startSuffixSpace = startSuffixSpace;\n\t\tthis.nextPrefixSpace = nextPrefixSpace;\n\t\tthis.separator = separator;\n\t\tthis.nextSuffixSpace = nextSuffixSpace;\n\t\tthis.endPrefixSpace = endPrefixSpace;\n\t\tthis.end = end;\n\t}\n\n\tpublic boolean isStartPrefixSpace() {\n\t\treturn startPrefixSpace;\n\t}\n\n\tpublic String getStart() {\n\t\treturn start;\n\t}\n\n\tpublic boolean isStartSuffixSpace() {\n\t\treturn startSuffixSpace;\n\t}\n\n\tpublic boolean isNextPrefixSpace() {\n\t\treturn nextPrefixSpace;\n\t}\n\n\tpublic String getSeparator() {\n\t\treturn separator;\n\t}\n\n\tpublic boolean isNextSuffixSpace() {\n\t\treturn nextSuffixSpace;\n\t}\n\n\tpublic boolean isEndPrefixSpace() {\n\t\treturn endPrefixSpace;\n\t}\n\n\tpublic String getEnd() {\n\t\treturn end;\n\t}\n}"
  },
  "tenperature": 0.9,
  "date": "2024-07-16T19:29:31.586Z"
}